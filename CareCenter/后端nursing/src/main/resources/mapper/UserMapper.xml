<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.czr.customer.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.czr.customer.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.czr.customer.model.User">
    insert into user (id, create_time, create_by, 
      update_time, update_by, is_deleted, 
      nickname, username, password, 
      sex, email, phone_number, 
      user_code)
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}, #{isDeleted,jdbcType=INTEGER}, 
      #{nickname,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, 
      #{userCode,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.czr.customer.model.User">
    update user
    set
      create_by = #{createBy,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      nickname = #{nickname,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      user_code = #{userCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, create_time, create_by, update_time, update_by, is_deleted, nickname, 
    username, password, sex, email, phone_number, user_code
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <!--按照其各属性查询-->
  <select id="selectByElement" parameterType="com.czr.customer.model.User" resultMap="BaseResultMap">
    select * from user where is_deleted = 0
    <trim prefix=" and " suffixOverrides="and" >
        <if test="id != null" >
            id = #{id,jdbcType=VARCHAR} and
        </if>
        <if test="nickname != null" >
          nickname = #{nickname,jdbcType=VARCHAR} and
        </if>
        <if test="username != null" >
            username = #{username,jdbcType=VARCHAR} and
        </if>
        <if test="password != null" >
          password = #{password,jdbcType=VARCHAR} and
        </if>
        <if test="userCode != null" >
          user_code = #{userCode,jdbcType=VARCHAR}
        </if>
    </trim>
  </select>
</mapper>